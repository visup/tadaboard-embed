{"version":3,"sources":["tadaboard-embed.min.js","/source/tadaboard-embed.js","/source/src/tadaboard-embed.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","define","amd","Tadaboard","this","containerElement","tadaboardId","options","arguments","undefined","nodeType","_setupIframe","value","_this","iframe","document","createElement","setAttribute","customDomain","style","width","appendChild","window","addEventListener","event","data","type","height","embeds","getElementsByClassName","children","dataset","id","TadaboardAutoload","runParser","tadaboard_embed"],"mappings":"AAEA,QAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,OCAjiB,SAAWkB,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,IAC9D,kBAAXG,SAAyBA,OAAOC,IAAMD,OAAOH,GACpDD,EAAOM,UAAYL,KACnBM,KAAM,WAAc,YDKpB,IETID,GAAA,WACO,QADPA,GACQE,EAAkBC,GFU1B,GEVuCC,GAAAC,UAAAtB,QAAA,GAAAuB,SAAAD,UAAA,MAAUA,UAAA,EACnD,IFWE/B,gBAAgB2B,KEbhBD,IAEGE,IAAqBA,EAAiBK,SACzC,KAAM,IAAI9B,WAAU,oDAGtB,KAAK0B,IAAgBA,EAAYpB,OAC/B,KAAM,IAAIN,WAAU,4DAGtBwB,MAAKC,iBAAmBA,EACxBD,KAAKE,YAAcA,EACnBF,KAAKG,QAAUA,EACfH,KAAKO,eF8CL,MA9BA9B,cE7BEsB,IF8BAV,IAAK,eACLmB,MEfQ,WFgBN,GAAIC,GAAQT,IEfhBA,MAAKU,OAASC,SAASC,cAAc,UACrCZ,KAAKU,OAAOG,aAAa,OAAQb,KAAKG,QAAQW,cAAgB,6BAA+B,MAAQd,KAAKE,aAC1GF,KAAKU,OAAOG,aAAa,cAAe,KACxCb,KAAKU,OAAOG,aAAa,YAAa,MACtCb,KAAKU,OAAOK,MAAMC,MAAQ,OAC1BhB,KAAKC,iBAAiBgB,YAAYjB,KAAKU,QACvCQ,OAAOC,iBAAiB,UAAW,SAACC,GACX,iBAAnBA,EAAMC,KAAKC,OACbb,EAAKC,OAAOK,MAAMQ,OAASH,EAAMC,KAAKE,UAEvC,QFoBDlC,IAAK,YACLmB,MElBY,WAEd,IAAK,GADDgB,GAASb,SAASc,uBAAuB,mBACpC5C,EAAI,EAAGA,EAAI2C,EAAO1C,UACrB0C,EAAO3C,GAAG6C,SAAS5C,OAAS,GADCD,IAEjC,GAAIkB,GAAUyB,EAAO3C,GAAI2C,EAAO3C,GAAG8C,QAAQC,QAlC3C7B,IAuCFmB,QAAOW,oBACTX,OAAOW,kBAAoBxB,OAC3BN,EAAU+B,YAzCZ,IAAAC,GAAAhC,CDoDE,OAAOgC","file":"tadaboard-embed.min.js","sourcesContent":["var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Tadaboard = factory();\n})(this, function () {\n  'use strict';\n\n  var Tadaboard = (function () {\n    function Tadaboard(containerElement, tadaboardId) {\n      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n      _classCallCheck(this, Tadaboard);\n\n      if (!containerElement || !containerElement.nodeType) {\n        throw new TypeError('Tadaboard: first argument must be an html element');\n      }\n\n      if (!tadaboardId || !tadaboardId.length) {\n        throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n      }\n\n      this.containerElement = containerElement;\n      this.tadaboardId = tadaboardId;\n      this.options = options;\n      this._setupIframe();\n    }\n\n    _createClass(Tadaboard, [{\n      key: '_setupIframe',\n      value: function _setupIframe() {\n        var _this = this;\n\n        this.iframe = document.createElement('iframe');\n        this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n        this.iframe.setAttribute('frameborder', '0');\n        this.iframe.setAttribute('scrolling', 'no');\n        this.iframe.style.width = '100%';\n        this.containerElement.appendChild(this.iframe);\n        window.addEventListener('message', function (event) {\n          if (event.data.type == 'tadaboardSize') {\n            _this.iframe.style.height = event.data.height;\n          }\n        }, false);\n      }\n    }], [{\n      key: 'runParser',\n      value: function runParser() {\n        var embeds = document.getElementsByClassName('tadaboard-embed');\n        for (var i = 0; i < embeds.length; i++) {\n          if (embeds[i].children.length > 0) {\n            break;\n          }\n          new Tadaboard(embeds[i], embeds[i].dataset.id);\n        }\n      }\n    }]);\n\n    return Tadaboard;\n  })();\n\n  if (window.TadaboardAutoload) {\n    window.TadaboardAutoload = undefined;\n    Tadaboard.runParser();\n  }\n\n  var tadaboard_embed = Tadaboard;\n\n  return tadaboard_embed;\n});\n//# sourceMappingURL=tadaboard-embed.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Tadaboard = factory()\n}(this, function () { 'use strict';\n\n  class Tadaboard {\n    constructor(containerElement, tadaboardId, options = {}) {\n      if (!containerElement || !containerElement.nodeType) {\n        throw new TypeError('Tadaboard: first argument must be an html element');\n      }\n\n      if (!tadaboardId || !tadaboardId.length) {\n        throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n      }\n\n      this.containerElement = containerElement;\n      this.tadaboardId = tadaboardId;\n      this.options = options;\n      this._setupIframe();\n    }\n\n    _setupIframe() {\n      this.iframe = document.createElement('iframe');\n      this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n      this.iframe.setAttribute('frameborder', '0');\n      this.iframe.setAttribute('scrolling', 'no');\n      this.iframe.style.width = '100%';\n      this.containerElement.appendChild(this.iframe);\n      window.addEventListener('message', (event) => {\n        if (event.data.type == 'tadaboardSize') {\n          this.iframe.style.height = event.data.height;\n        }\n      }, false);\n    }\n\n    static runParser() {\n      var embeds = document.getElementsByClassName('tadaboard-embed');\n      for (var i = 0; i < embeds.length; i++) {\n        if (embeds[i].children.length > 0) { break; }\n        new Tadaboard(embeds[i], embeds[i].dataset.id);\n      }\n    }\n  }\n\n  if (window.TadaboardAutoload) {\n    window.TadaboardAutoload = undefined;\n    Tadaboard.runParser();\n  }\n\n  var tadaboard_embed = Tadaboard;\n\n  return tadaboard_embed;\n\n}));\n","class Tadaboard {\n  constructor(containerElement, tadaboardId, options = {}) {\n    if (!containerElement || !containerElement.nodeType) {\n      throw new TypeError('Tadaboard: first argument must be an html element');\n    }\n\n    if (!tadaboardId || !tadaboardId.length) {\n      throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n    }\n\n    this.containerElement = containerElement;\n    this.tadaboardId = tadaboardId;\n    this.options = options;\n    this._setupIframe();\n  }\n\n  _setupIframe() {\n    this.iframe = document.createElement('iframe');\n    this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n    this.iframe.setAttribute('frameborder', '0');\n    this.iframe.setAttribute('scrolling', 'no');\n    this.iframe.style.width = '100%';\n    this.containerElement.appendChild(this.iframe);\n    window.addEventListener('message', (event) => {\n      if (event.data.type == 'tadaboardSize') {\n        this.iframe.style.height = event.data.height;\n      }\n    }, false);\n  }\n\n  static runParser() {\n    var embeds = document.getElementsByClassName('tadaboard-embed');\n    for (var i = 0; i < embeds.length; i++) {\n      if (embeds[i].children.length > 0) { break; }\n      new Tadaboard(embeds[i], embeds[i].dataset.id);\n    }\n  }\n}\n\nif (window.TadaboardAutoload) {\n  window.TadaboardAutoload = undefined;\n  Tadaboard.runParser();\n}\n\nexport default Tadaboard;\n"],"sourceRoot":"/source/"}