{"version":3,"sources":["tadaboard-embed.min.js","/source/tadaboard-embed.js","/source/src/tadaboard-embed.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","define","amd","Tadaboard","this","containerElement","tadaboardId","options","arguments","undefined","nodeType","_setupIframe","value","_this","iframe","document","createElement","setAttribute","customDomain","appendChild","width","height","style","window","addEventListener","event","data","type","showTitle","contentWindow","postMessage","embeds","getElementsByClassName","embedElement","children","dataset","id","title","TadaboardAutoload","runParser","tadaboard_embed"],"mappings":"AAEA,QAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,OCAjiB,SAAWkB,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,IAC9D,kBAAXG,SAAyBA,OAAOC,IAAMD,OAAOH,GACpDD,EAAOM,UAAYL,KACnBM,KAAM,WAAc,YDKpB,IETID,GAAA,WACO,QADPA,GACQE,EAAkBC,GFU1B,GEVuCC,GAAAC,UAAAtB,QAAA,GAAAuB,SAAAD,UAAA,MAAUA,UAAA,EACnD,IFWE/B,gBAAgB2B,KEbhBD,IAEGE,IAAqBA,EAAiBK,SACzC,KAAM,IAAI9B,WAAU,oDAGtB,KAAK0B,IAAgBA,EAAYpB,OAC/B,KAAM,IAAIN,WAAU,4DAGtBwB,MAAKC,iBAAmBA,EACxBD,KAAKE,YAAcA,EACnBF,KAAKG,QAAUA,EACfH,KAAKO,eF2DL,MA3CA9B,cE7BEsB,IF8BAV,IAAK,eACLmB,MEfQ,WFgBN,GAAIC,GAAQT,IEfhBA,MAAKU,OAASC,SAASC,cAAc,UACrCZ,KAAKU,OAAOG,aAAa,OAAQb,KAAKG,QAAQW,cAAgB,6BAA+B,MAAQd,KAAKE,aAC1GF,KAAKU,OAAOG,aAAa,cAAe,KACxCb,KAAKU,OAAOG,aAAa,YAAa,MACtCb,KAAKC,iBAAiBc,YAAYf,KAAKU,QACnCV,KAAKG,QAAQa,OAAShB,KAAKG,QAAQc,QACrCjB,KAAKU,OAAOQ,MAAMF,MAAQhB,KAAKG,QAAQa,MAAQ,KAC/ChB,KAAKU,OAAOQ,MAAMD,OAASjB,KAAKG,QAAQc,OAAS,OAEjDjB,KAAKU,OAAOQ,MAAMF,MAAQ,OAC1BG,OAAOC,iBAAiB,UAAW,SAACC,GACX,iBAAnBA,EAAMC,KAAKC,OACbd,EAAKC,OAAOQ,MAAMD,OAASI,EAAMC,KAAKL,OAAS,MAEnB,KAA1BR,EAAKN,QAAQqB,WACff,EAAKC,OAAOe,cAAcC,aAAaF,WAAW,GAAQ,OAE3D,SFqBHnC,IAAK,YACLmB,MElBY,WAEd,IAAK,GADDmB,GAAShB,SAASiB,uBAAuB,mBACpC/C,EAAI,EAAGA,EAAI8C,EAAO7C,OAAQD,IAAK,CACtC,GAAIgD,GAAeF,EAAO9C,EAC1B,IAAIgD,EAAaC,SAAShD,OAAS,EAAK,KACpC+C,GAAaE,QAAQf,OAASa,EAAaE,QAAQd,OACrD,GAAIlB,GAAU8B,EAAcA,EAAaE,QAAQC,IAAKhB,MAAOa,EAAaE,QAAQf,MAAOC,OAAQY,EAAaE,QAAQd,OAAQO,UAAWK,EAAaE,QAAQE,QAE9J,GAAIlC,GAAU8B,EAAcA,EAAaE,QAAQC,SA9CnDjC,IAoDgB,oBAAXoB,SAA0BA,OAAOe,oBAC1Cf,OAAOe,kBAAoB7B,OAC3BN,EAAUoC,YAtDZ,IAAAC,GAAArC,CDiEE,OAAOqC","file":"tadaboard-embed.min.js","sourcesContent":["var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Tadaboard = factory();\n})(this, function () {\n  'use strict';\n\n  var Tadaboard = (function () {\n    function Tadaboard(containerElement, tadaboardId) {\n      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n      _classCallCheck(this, Tadaboard);\n\n      if (!containerElement || !containerElement.nodeType) {\n        throw new TypeError('Tadaboard: first argument must be an html element');\n      }\n\n      if (!tadaboardId || !tadaboardId.length) {\n        throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n      }\n\n      this.containerElement = containerElement;\n      this.tadaboardId = tadaboardId;\n      this.options = options;\n      this._setupIframe();\n    }\n\n    _createClass(Tadaboard, [{\n      key: '_setupIframe',\n      value: function _setupIframe() {\n        var _this = this;\n\n        this.iframe = document.createElement('iframe');\n        this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n        this.iframe.setAttribute('frameborder', '0');\n        this.iframe.setAttribute('scrolling', 'no');\n        this.containerElement.appendChild(this.iframe);\n        if (this.options.width && this.options.height) {\n          this.iframe.style.width = this.options.width + 'px';\n          this.iframe.style.height = this.options.height + 'px';\n        } else {\n          this.iframe.style.width = '100%';\n          window.addEventListener('message', function (event) {\n            if (event.data.type == 'tadaboardSize') {\n              _this.iframe.style.height = event.data.height + 'px';\n            }\n            if (_this.options.showTitle == '0') {\n              _this.iframe.contentWindow.postMessage({ showTitle: false }, '*');\n            }\n          }, false);\n        }\n      }\n    }], [{\n      key: 'runParser',\n      value: function runParser() {\n        var embeds = document.getElementsByClassName('tadaboard-embed');\n        for (var i = 0; i < embeds.length; i++) {\n          var embedElement = embeds[i];\n          if (embedElement.children.length > 0) {\n            break;\n          }\n          if (embedElement.dataset.width && embedElement.dataset.height) {\n            new Tadaboard(embedElement, embedElement.dataset.id, { width: embedElement.dataset.width, height: embedElement.dataset.height, showTitle: embedElement.dataset.title });\n          } else {\n            new Tadaboard(embedElement, embedElement.dataset.id);\n          }\n        }\n      }\n    }]);\n\n    return Tadaboard;\n  })();\n\n  if (typeof window !== 'undefined' && window.TadaboardAutoload) {\n    window.TadaboardAutoload = undefined;\n    Tadaboard.runParser();\n  }\n\n  var tadaboard_embed = Tadaboard;\n\n  return tadaboard_embed;\n});\n//# sourceMappingURL=tadaboard-embed.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Tadaboard = factory()\n}(this, function () { 'use strict';\n\n  class Tadaboard {\n    constructor(containerElement, tadaboardId, options = {}) {\n      if (!containerElement || !containerElement.nodeType) {\n        throw new TypeError('Tadaboard: first argument must be an html element');\n      }\n\n      if (!tadaboardId || !tadaboardId.length) {\n        throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n      }\n\n      this.containerElement = containerElement;\n      this.tadaboardId = tadaboardId;\n      this.options = options;\n      this._setupIframe();\n    }\n\n    _setupIframe() {\n      this.iframe = document.createElement('iframe');\n      this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n      this.iframe.setAttribute('frameborder', '0');\n      this.iframe.setAttribute('scrolling', 'no');\n      this.containerElement.appendChild(this.iframe);\n      if (this.options.width && this.options.height) {\n        this.iframe.style.width = this.options.width + 'px';\n        this.iframe.style.height = this.options.height + 'px';\n      } else {\n        this.iframe.style.width = '100%';\n        window.addEventListener('message', (event) => {\n          if (event.data.type == 'tadaboardSize') {\n            this.iframe.style.height = event.data.height + 'px';\n          }\n          if (this.options.showTitle == '0') {\n            this.iframe.contentWindow.postMessage({showTitle: false}, '*');\n          }\n        }, false);\n      }\n    }\n\n    static runParser() {\n      var embeds = document.getElementsByClassName('tadaboard-embed');\n      for (var i = 0; i < embeds.length; i++) {\n        var embedElement = embeds[i];\n        if (embedElement.children.length > 0) { break; }\n        if (embedElement.dataset.width && embedElement.dataset.height) {\n          new Tadaboard(embedElement, embedElement.dataset.id, {width: embedElement.dataset.width, height: embedElement.dataset.height, showTitle: embedElement.dataset.title});\n        } else {\n          new Tadaboard(embedElement, embedElement.dataset.id);\n        }\n      }\n    }\n  }\n\n  if (typeof window !== 'undefined' && window.TadaboardAutoload) {\n    window.TadaboardAutoload = undefined;\n    Tadaboard.runParser();\n  }\n\n  var tadaboard_embed = Tadaboard;\n\n  return tadaboard_embed;\n\n}));\n","class Tadaboard {\n  constructor(containerElement, tadaboardId, options = {}) {\n    if (!containerElement || !containerElement.nodeType) {\n      throw new TypeError('Tadaboard: first argument must be an html element');\n    }\n\n    if (!tadaboardId || !tadaboardId.length) {\n      throw new TypeError('Tadaboard: second argument must be the tadaboard share id');\n    }\n\n    this.containerElement = containerElement;\n    this.tadaboardId = tadaboardId;\n    this.options = options;\n    this._setupIframe();\n  }\n\n  _setupIframe() {\n    this.iframe = document.createElement('iframe');\n    this.iframe.setAttribute('src', (this.options.customDomain || 'https://www.tadaboard.com') + '/e/' + this.tadaboardId);\n    this.iframe.setAttribute('frameborder', '0');\n    this.iframe.setAttribute('scrolling', 'no');\n    this.containerElement.appendChild(this.iframe);\n    if (this.options.width && this.options.height) {\n      this.iframe.style.width = this.options.width + 'px';\n      this.iframe.style.height = this.options.height + 'px';\n    } else {\n      this.iframe.style.width = '100%';\n      window.addEventListener('message', (event) => {\n        if (event.data.type == 'tadaboardSize') {\n          this.iframe.style.height = event.data.height + 'px';\n        }\n        if (this.options.showTitle == '0') {\n          this.iframe.contentWindow.postMessage({showTitle: false}, '*');\n        }\n      }, false);\n    }\n  }\n\n  static runParser() {\n    var embeds = document.getElementsByClassName('tadaboard-embed');\n    for (var i = 0; i < embeds.length; i++) {\n      var embedElement = embeds[i];\n      if (embedElement.children.length > 0) { break; }\n      if (embedElement.dataset.width && embedElement.dataset.height) {\n        new Tadaboard(embedElement, embedElement.dataset.id, {width: embedElement.dataset.width, height: embedElement.dataset.height, showTitle: embedElement.dataset.title});\n      } else {\n        new Tadaboard(embedElement, embedElement.dataset.id);\n      }\n    }\n  }\n}\n\nif (typeof window !== 'undefined' && window.TadaboardAutoload) {\n  window.TadaboardAutoload = undefined;\n  Tadaboard.runParser();\n}\n\nexport default Tadaboard;\n"],"sourceRoot":"/source/"}